name: Build Website
on:
  pull_request:
  push:
    branches:
      - master
      - dev

env:
  NUM_WORKERS: 15

concurrency:
  group: build-docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Generates a JSON list that is used by the strategy.matrix of the build job to spawn multiple workers
  compute-build-strategy-matrix:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Generate Build Matrix
        id: compute-strategy-matrix
        run: |
          echo "strategy-matrix=$(python3 .github/workflows/qml_pipeline_utils.py \
            build-strategy-matrix \
            ${{ github.workspace }} \
            --num-workers=${{ env.NUM_WORKERS }})" >> $GITHUB_OUTPUT
    outputs:
      strategy-matrix: ${{ steps.compute-strategy-matrix.outputs.strategy-matrix }}

  build:
    runs-on: ubuntu-22.04
    needs:
      - compute-build-strategy-matrix
    strategy:
      matrix:
        offset: ${{ fromJson(needs.compute-build-strategy-matrix.outputs.strategy-matrix) }}
    env:
      ignore_cache: ${{ contains(github.event.pull_request.labels.*.name, 'ignore-qml-cache') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Python Dependencies
        run: |
          pip install -r requirements.txt
          pip install --no-deps -r requirements_no_deps.txt
          pip install --upgrade pip 'setuptools<65' cmake

      # Creates a temp file with current matrix information, which includes:
      #  - Current offset
      #  - Total Workers
      #  - Metadata regarding the Python version and dependencies
      #  - The name of files that will be executed by this worker
      # The hash of this file is used as portion of the key in subsequent caching steps.
      # This ensures that if the number of worker, tutorials, or python evironment details change,
      # it will invalidate the previous cache and build fresh.
      - name: Set Matrix offset file
        run: |
          cat >matrix_info.txt <<EOL
          workers: ${{ env.NUM_WORKERS }}
          offset: ${{ matrix.offset }}
          ---
          python_version: ${{ steps.setup_python.outputs.python-version }}
          requirements: ${{ hashFiles('requirements.txt') }}
          requirements_no_deps: ${{ hashFiles('requirements_no_deps.txt') }}
          EOL
          python3 .github/workflows/qml_pipeline_utils.py \
           remove-executable-code \
           ${{ github.workspace }} \
           --num-workers=${{ env.NUM_WORKERS }} \
           --offset=${{ matrix.offset }} \
           --dry-run >> matrix_info.txt
          cat matrix_info.txt

      - name: Install OS build dependencies
        run: |
          sudo apt-get install -y pandoc --quiet

      # Removes executable code from tutorials that are not relevant to current node
      # See documentation in github_job_scheduler.py for more details.
      - name: Remove extraneous executable code from demos
        run: |
          python3 .github/workflows/qml_pipeline_utils.py \
           remove-executable-code \
           ${{ github.workspace }} \
           --num-workers=${{ env.NUM_WORKERS }} \
           --offset=${{ matrix.offset }} \
           --verbose

      - name: Gallery Cache
        uses: actions/cache@v3
        with:
          path: demos
          key: gallery-${{ hashFiles('matrix_info.txt') }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            gallery-${{ hashFiles('matrix_info.txt') }}-${{ github.ref_name }}-
            gallery-${{ hashFiles('matrix_info.txt') }}-

      - name: Sphinx Cache
        uses: actions/cache@v3
        with:
          path: sphinx_cache-${{ hashFiles('matrix_info.txt') }}
          key: sphinx-${{ hashFiles('matrix_info.txt') }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: |
            sphinx-${{ hashFiles('matrix_info.txt') }}-${{ github.ref_name }}-
            sphinx-${{ hashFiles('matrix_info.txt') }}-

      - name: Clear Cache
        if: env.ignore_cache == 'true'
        env:
          sphinx_cache_filename: sphinx_cache-${{ hashFiles('matrix_info.txt') }}
        run: |
          if [ -d demos ]; then rm -rf demos; fi
          if [ -d ${{ env.sphinx_cache_filename }} ]; then rm -rf ${{ env.sphinx_cache_filename }}; fi

      - name: Build Tutorials
        run: |
          make download
          make SPHINXOPTS="-d sphinx_cache-${{ hashFiles('matrix_info.txt') }}" html

      # These are files that are generated as part of sphinx-build but are not needed and supported on the live website
      # There does not seem to be an option to "not" generate them, therefore this step deletes these files before they
      # are published to the live website.
      - name: Update sitemap.xml
        run: |
          python3 .github/workflows/qml_pipeline_utils.py \
            clean-sitemap \
            ${{  github.workspace }} \
            --html-files="demos/sg_execution_times.html" \
            --verbose

      # Removes built html files that are not relevant to current node
      # See documentation in github_job_scheduler.py for more details.
      - name: Clean HTML Files
        if: matrix.offset == 0
        run: |
          python3 .github/workflows/qml_pipeline_utils.py \
           remove-html \
           ${{ github.workspace }} \
           --num-workers=${{ env.NUM_WORKERS }} \
           --offset=${{ matrix.offset }} \
           --preserve-non-sphinx-images \
           --verbose

      - name: Clean HTML Files and Images
        if: matrix.offset != 0
        run: |
          python3 .github/workflows/qml_pipeline_utils.py \
           remove-html \
           ${{ github.workspace }} \
           --num-workers=${{ env.NUM_WORKERS }} \
           --offset=${{ matrix.offset }} \
           --verbose

      - name: Upload Html
        if: matrix.offset == 0
        uses: actions/upload-artifact@v3
        with:
          name: html-${{ matrix.offset }}.zip
          if-no-files-found: error
          retention-days: 1
          path: _build/html

      # Only upload demos since all other html files are pushed as artifact from offset 0
      # This step excludes static files (files that are the same across all workers) from being included in the
      # built artifact. This is done as a performance boost.
      # The step above this is executed by only one worker which uploads all static content.
      - name: Upload Demo Html
        if: matrix.offset != 0
        uses: actions/upload-artifact@v3
        with:
          name: html-${{ matrix.offset }}.zip
          if-no-files-found: error
          retention-days: 1
          path: |
            _build/html
            !_build/html/*.html
            !_build/html/*.js
            !_build/html/*.xml
            !_build/html/_static
            !_build/html/glossary

  save-build-context:
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: Save Pull Request Event Context
        if: github.event_name == 'pull_request'
        run: |
          mkdir -p /tmp/pr
          cat >/tmp/pr/pr_info.json <<EOL
          {
            "id": "${{ github.event.pull_request.number }}",
            "ref": "${{ github.event.pull_request.head.sha }}",
            "ref_name": "${{ github.event.pull_request.head.ref }}"
          }
          EOL
      - name: Upload Pull Request Event Context as Artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3
        with:
          name: pr_info.zip
          path: /tmp/pr
          retention-days: 30

      # Will run to create an artifact containing key push event information
      - name: Save Push Event Context
        if: github.event_name == 'push'
        run: |
          mkdir -p /tmp/push
          cat >/tmp/push/push_info.json <<EOL
          {
            "ref": "${{ github.sha }}",
            "ref_name": "${{ github.ref_name }}"
          }
          EOL
      - name: Upload Push Event Context as Artifact
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: push_info.zip
          path: /tmp/push
          retention-days: 30
