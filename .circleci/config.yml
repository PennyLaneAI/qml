version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.16

jobs:
  build:
    docker:
      - image: circleci/python:3.7.2
      - image: rigetti/quilc
        command:
        - -R
      - image: rigetti/qvm
        command:
        - -S

    steps:
      - checkout

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - pip-v15-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - pip-v15-{{ .Branch }}-
            - pip-v15-

      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pip setuptools --upgrade
            pip install -r requirements.txt

      - save_cache:
          paths:
            - venv
          key: pip-v15-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - restore_cache:
          keys:
            - gallery-v9-{{ .Branch }}-{{ .Revision }}
            - gallery-v9-{{ .Branch }}-
            - gallery-v9-

      - run:
          name: Build tutorials
          no_output_timeout: 30m
          command: |
            . venv/bin/activate
            make download
            make html
            cd _build/ && zip -r /tmp/qml_html.zip html && cd ../
            zip -r /tmp/qml_demos.zip demos
            zip -r /tmp/qml_backreferences backreferences

      - save_cache:
          paths:
            - ./demos
          key: gallery-v9-{{ .Branch }}-{{ .Revision }}

      - store_artifacts:
          path: /tmp/qml_html.zip

      - store_artifacts:
          path: /tmp/qml_demos.zip

      - store_artifacts:
          path: /tmp/qml_backreferences.zip

      - store_artifacts:
          path: _build/html

      - store_test_results:
          path: _build/test-results

      - store_artifacts:
          path: _build/test-results

      - run:
          name: Comment artifacts
          command: |
            if [[ -z "${GH_AUTH_TOKEN}" ]]; then
              echo "GitHub token not available, skipping uploading artifacts..."
            else
              echo "Commenting artifacts..."
              pip3 install pygithub --user && python3 .circleci/comment.py
            fi

  deploy:
    executor:
      name: aws-cli/default
      python-version: '3.7.2'

    docker:
      - image: circleci/python:3.7.2
      - image: rigetti/quilc
        command:
        - -R
      - image: rigetti/qvm
        command:
        - -S

    steps:
      - checkout

      - aws-cli/setup:
          aws-region: AWS_REGION

      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - pip-v15-{{ .Branch }}-{{ checksum "requirements.txt" }}
            - pip-v15-{{ .Branch }}-
            - pip-v15-

      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pip setuptools --upgrade
            pip install -r requirements.txt

      - save_cache:
          paths:
            - venv
          key: pip-v15-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - restore_cache:
          keys:
            - gallery-v9-{{ .Branch }}-{{ .Revision }}
            - gallery-v9-{{ .Branch }}-
            - gallery-v9-

      - run:
          name: Build tutorials
          no_output_timeout: 30m
          command: |
            . venv/bin/activate
            make download
            make html
            touch _build/html/implementations.html
            touch _build/html/beginner.html

      - save_cache:
          paths:
            - ./demos
          key: gallery-v9-{{ .Branch }}-{{ .Revision }}

      - deploy:
          name: Deploy to AWS
          command: |
            aws s3 sync _build/html s3://pennylane.ai/qml --delete
            aws s3 cp _build/html/implementations.html s3://pennylane.ai/qml/implementations.html --website-redirect https://pennylane.ai/qml/demonstrations.html
            aws s3 cp _build/html/beginner.html s3://pennylane.ai/qml/beginner.html --website-redirect https://pennylane.ai/qml/demonstrations.html
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths /qml/*

workflows:
  workflow:
    jobs:
      - build:
          filters:
            branches:
              ignore: master

      - deploy:
          context: aws_credentials
          filters:
            branches:
              only: master
